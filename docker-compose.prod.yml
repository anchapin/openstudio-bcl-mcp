# Production Docker Compose configuration
# Use with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: always
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 1G
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openstudio.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.openstudio.tls=true"
      - "traefik.http.routers.openstudio.tls.certresolver=letsencrypt"

  # Production Redis with persistence
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass your_redis_password
    volumes:
      - redis-prod-data:/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: openstudio-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - openstudio-network
    depends_on:
      - app-prod

  # Log aggregation
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: openstudio-fluentd
    volumes:
      - ./config/fluentd:/fluentd/etc:ro
      - ./logs:/app/logs:ro
    networks:
      - openstudio-network
    environment:
      - FLUENTD_CONF=fluent.conf

volumes:
  redis-prod-data:
    driver: local